@using Microsoft.AspNetCore.Components.Forms

<MudForm @bind-IsValid="@formValid">

    <MudText Typo="Typo.subtitle1">
        @if (file is null)
        {
            <text>Upload an Outloock Calender CSV</text>
            <MudButton HtmlTag="label"
                   Variant="Variant.Filled"
                   Color="Color.Secondary"
                   StartIcon="@Icons.Filled.CloudUpload"
                   Size="Size.Small"
                   Class="ml-2"
                   for="fileInput">
                Upload File
            </MudButton>
        }
        else
        {
            <text>You have uploaded a file called: <strong>@file.Name</strong></text> 
            <MudButton Variant="Variant.Filled"
                   Color="Color.Error"
                   StartIcon="@Icons.Filled.DeleteForever"
                   Class="ml-2"
                   Size="Size.Small"
                   OnClick="RemoveFile">
                Remove File
            </MudButton>

            <MudButton Variant="Variant.Filled"
                   Size="Size.Small"
                   Color="Color.Primary" Disabled="@(!formValid)"
                   StartIcon="@Icons.Filled.Calculate"
                   Class="ml-2" OnClick="HandleSubmit">Process</MudButton>
        }
    </MudText>

    <InputFile id="fileInput" OnChange="UploadFile" hidden="hidden" />

</MudForm>


@code {
    [Parameter, EditorRequired] public EventCallback<InputFormSubmitArgs> OnSubmit { get; set; }

    IBrowserFile? file;
    bool formValid;

    private void UploadFile(InputFileChangeEventArgs e)
    {
        file = e.File;
    }

    private void RemoveFile()
    {
        file = null;
    }

    private Task HandleSubmit()
    {
        if (file is not null)
        {
            InputFormSubmitArgs inputFormSubmitArgs = new(file);

            return OnSubmit.InvokeAsync(inputFormSubmitArgs);
        }
        return Task.CompletedTask;
    }

}
