@using TimeUtil.Components.Theme

@inherits LayoutComponentBase

<MudThemeProvider Theme="Theme.MudTheme" @bind-IsDarkMode="@darkMode" />
<MudDialogProvider MaxWidth="MaxWidth.Medium" FullWidth="true" DisableBackdropClick="true"/>
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <StyledText Typo="Typo.h5" Class="ml-3">Time Utilisation</StyledText>
        <MudSpacer />
        <MudIconButton Icon="@ButtonIcon" OnClick="ToggleDarkMode" aria-label="toggle Dark Mode" Size="Size.Large" Color="Color.Inherit" />
    </MudAppBar>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-5">
            <ErrorBoundary @ref="@errorBoundary">
                <ChildContent>
                    @Body
                </ChildContent>
                <ErrorContent>
                    <ErrorDisplay Exception="@context" Reset="@Reset" />
                </ErrorContent>
            </ErrorBoundary>
        </MudContainer>
    </MudMainContent>
</MudLayout>


@code {
    private ErrorBoundary? errorBoundary;
    private bool darkMode = false;

    private string ButtonIcon => darkMode ? Icons.Material.Outlined.LightMode : Icons.Material.Outlined.DarkMode;

    private void ToggleDarkMode()
    {
        darkMode = !darkMode;
    }

    private void Reset()
    {
        errorBoundary?.Recover();
    }
}