@using TimeUtil.Shared

<MudBreakpointProvider>
    <MudGrid>
        <MudItem xs="12">
            <h1>Results</h1>
        </MudItem>
        <MudItem xs="12">
            Time Util filters
            <MudStack Row="true">
                <MonthRangePicker @bind-MonthRange="monthRange" StartDate="Calendar.FirstEventDate" EndDate="Calendar.LastEventDate" />
            </MudStack>

        </MudItem>
        <MudItem md="4" lg="3" xl="2">
            <MudGrid>
                <MudItem xs="12">
                    <CategoriesCard @bind-FilterCategories="@SelectedCategories" Categories="@Calendar.Categories" />
                </MudItem>
                <MudHidden Breakpoint="Breakpoint.LgAndDown" Invert="true">
                    @*Total Hours Card*@
                    <MudItem xs="12">
                        <MudGrid>
                            <MudItem xs="12">
                                <TotalHoursCard Calendar="Calendar" Events="events.Events" />
                            </MudItem>
                            @*Time Until*@
                            <MudItem xs="12">
                                <TimeUntilCard Calendar="@Calendar" @bind-TargetHours="targetHours" Events="events.Events" />
                            </MudItem>
                        </MudGrid>
                    </MudItem>
                </MudHidden>
            </MudGrid>
        </MudItem>
        <MudItem xs="12" md="8" lg="9" xl="8">
            <MudCard>
                <EventsTable Events="@events" />
            </MudCard>
        </MudItem>
        <MudHidden Breakpoint="Breakpoint.Xl" Invert="true">
            <MudItem xl="2">
                <MudGrid>
                    @*Total Hours Card*@
                    <MudItem xs="12">
                        <TotalHoursCard Calendar="Calendar" Events="events.Events" />
                    </MudItem>
                    @*Time Until*@
                    <MudItem xs="12">
                        <TimeUntilCard Calendar="@Calendar" @bind-TargetHours="targetHours" Events="events.Events" />
                    </MudItem>
                </MudGrid>
            </MudItem>
        </MudHidden>
    </MudGrid>
</MudBreakpointProvider>

@code {
    [Parameter, EditorRequired]
    public OutlookCalendar Calendar { get; set; } = default!;

    private bool _shouldRender = true;

    private double targetHours = 120;

    private DateTime? _month;

    private OutlookCalendar? _calendar;
    private EventsTableData events = new(Enumerable.Empty<Event>());

    private List<string> _selectedCategories = new();

    private MonthRange? _monthRange;

    private MonthRange? monthRange
    {
        get => _monthRange;
        set
        {
            _monthRange = value;
            CalcEventsList();
        }
    }

    private List<string> SelectedCategories
    {
        get => _selectedCategories;
        set
        {
            _selectedCategories = value;
            CalcEventsList();
        }
    }

    private void CalcEventsList()
    {
        events = new(Calendar.FilterEvents(_selectedCategories, _monthRange?.StartMonth, _monthRange?.EndMonth));
    }

    protected override void OnParametersSet()
    {
        ThrowHelpers.ThrowIfRequiredPrameterNull(Calendar);

        if (_calendar != Calendar)
        {
            _calendar = Calendar;
            _selectedCategories = Calendar.Categories.ToList();
            CalcEventsList();
        }
        else
        {
            _shouldRender = false;
        }
    }

    protected override bool ShouldRender()
    {
        bool tempShouldRender = _shouldRender;

        _shouldRender = true;

        return tempShouldRender;
    }
}
