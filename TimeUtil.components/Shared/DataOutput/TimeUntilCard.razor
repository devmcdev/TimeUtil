@using TimeUtil.Shared
@inject IDialogService DialogService

<MudCard Class="pa-3 h-100">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="@Typo.h5">
                Time Utilisation
            </MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIconButton OnClick="onClick" Size="Size.Small" Icon="@Icons.Material.Filled.QuestionMark" Color="Color.Default" />
        </CardHeaderActions>
    </MudCardHeader>
    <MudList>
        <MudListItem>
            <MudNumericField @bind-Value="TargetHoursBinding" Label="Target Hours" Format="F2" Variant="Variant.Outlined" Min="0" />
        </MudListItem>

        <MudDivider />
        <MudListItem>
            Time Utilisation: @Math.Round(OutlookCalendar.TimeUtilisationPercentage(TargetHours, Events),2)%
        </MudListItem>
    </MudList>
</MudCard>
@code {

    [Parameter] public double TargetHours { get; set; }

    [Parameter] public EventCallback<double> TargetHoursChanged { get; set; }

    [Parameter, EditorRequired] public IEnumerable<Event> Events { get; set; } = default!;

    [Parameter, EditorRequired] public OutlookCalendar Calendar { get; set; } = default!;

    private double TargetHoursBinding
    {
        get => TargetHours;
        set => TargetHoursChanged.InvokeAsync(value);
    }

    private void onClick()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var parameters = new DialogParameters();
        parameters.Add(nameof(HelpDialog.ContentText), "This is some help");
        DialogService.Show<HelpDialog>("Simple Dialog", parameters, options);
    }
}
